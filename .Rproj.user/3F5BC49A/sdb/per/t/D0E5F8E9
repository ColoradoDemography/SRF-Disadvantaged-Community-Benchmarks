{
    "collab_server" : "",
    "contents" : "library(RODBC)\nlibrary(tidyverse)\nlibrary(codemogAPI)\nlibrary(codemog)\nsource(\"J:/Estimates/ConstructionData/LocalUpdateData/v2015ResidentialConstructionSurvey/v2015MasterUpdates/pw.r\") # creates a connection to Oracle using a document not under version control\n#### Input Tables ####\n\n# OIS.PLACE provides a LGID to PLACEFIPS crosswalk\noisplace=sqlFetch(dolaprod, \"OIS.PLACE\")\n\n# DLG.LIM_LEVY provides assessed values\nlim_levy=sqlFetch(dolaprod, \"DLG.LIM_LEVY\")\n\n# DLG.LGBASIC provides basic local government data\nlgbasic=sqlFetch(dolaprod, \"DLG.LGBASIC\")\n\n# Total Housing Units\nmunis=as.numeric(c(\"760\", \"925\", \"1090\", \"1530\", \"2355\", \"3235\", \"3455\", \"3620\", \"3950\", \"4000\", \"4110\", \"4935\", \"5265\", \"6090\", \"6255\", \"6530\", \"7025\", \"7190\", \"7410\", \"7571\", \"7795\", \"7850\", \"8070\", \"8345\", \"8400\", \"8675\", \"9115\", \"9280\", \"9555\", \"10105\", \"10600\", \"11260\", \"11645\", \"11810\", \"12045\", \"12387\", \"12415\", \"12635\", \"12815\", \"12855\", \"12910\", \"13460\", \"13845\", \"14175\", \"14765\", \"15330\", \"15550\", \"15605\", \"16000\", \"16385\", \"16495\", \"17375\", \"17760\", \"17925\", \"18310\", \"18420\", \"18530\", \"18640\", \"18750\", \"19080\", \"19355\", \"19630\", \"19795\", \"19850\", \"20000\", \"20440\", \"20495\", \"20770\", \"21265\", \"22035\", \"22145\", \"22200\", \"22860\", \"23025\", \"23135\", \"23740\", \"24620\", \"24785\", \"24950\", \"25115\", \"25280\", \"25610\", \"26270\", \"26600\", \"26765\", \"26875\", \"27040\", \"27425\", \"27700\", \"27810\", \"27865\", \"27975\", \"28105\", \"28305\", \"28360\", \"28690\", \"28745\", \"29185\", \"29680\", \"29735\", \"29955\", \"30340\", \"30780\", \"30835\", \"31550\", \"31605\", \"31660\", \"31715\", \"32155\", \"32650\", \"33035\", \"33310\", \"33640\", \"33695\", \"34520\", \"34740\", \"34960\", \"35070\", \"36610\", \"37215\", \"37270\", \"37380\", \"37545\", \"37600\", \"37820\", \"37875\", \"38370\", \"38535\", \"38590\", \"39195\", \"39855\", \"39965\", \"40185\", \"40515\", \"40570\", \"40790\", \"41010\", \"41560\", \"41835\", \"42055\", \"42110\", \"42330\", \"42495\", \"43000\", \"43110\", \"43550\", \"43605\", \"43660\", \"44100\", \"44320\", \"44980\", \"45255\", \"45530\", \"45695\", \"45955\", \"45970\", \"46355\", \"46465\", \"47070\", \"48060\", \"48115\", \"48445\", \"48500\", \"48555\", \"49600\", \"49875\", \"50040\", \"50480\", \"50920\", \"51250\", \"51635\", \"51690\", \"51745\", \"51800\", \"52075\", \"52350\", \"52550\", \"52570\", \"53120\", \"53175\", \"53395\", \"54330\", \"54880\", \"54935\", \"55045\", \"55155\", \"55540\", \"55705\", \"55870\", \"55980\", \"56145\", \"56365\", \"56420\", \"56475\", \"56860\", \"56970\", \"57025\", \"57245\", \"57300\", \"57400\", \"57630\", \"58235\", \"59005\", \"59830\", \"60160\", \"60600\", \"61315\", \"62000\", \"62660\", \"62880\", \"63045\", \"63265\", \"64090\", \"64200\", \"64255\", \"64970\", \"65190\", \"65740\", \"66895\", \"67005\", \"67280\", \"67830\", \"68105\", \"68655\", \"68930\", \"69040\", \"69150\", \"69645\", \"69700\", \"70195\", \"70250\", \"70360\", \"70525\", \"70580\", \"70635\", \"71755\", \"72395\", \"73330\", \"73715\", \"73825\", \"73935\", \"74485\", \"74815\", \"75640\", \"75970\", \"76795\", \"77290\", \"77510\", \"78610\", \"79270\", \"80040\", \"80865\", \"81030\", \"81690\", \"82130\", \"82350\", \"82460\", \"82735\", \"83230\", \"83450\", \"83835\", \"84440\", \"84770\", \"85045\", \"85155\", \"85485\", \"85705\", \"86090\", \"86310\", \"86475\", \"86750\", \"99990\"))\nhousingunits=muni_est(munis, 2010:2015, vars=c(\"totalhousingunits\", \"totalpopulation\"))%>%\n  select(-totalpopulation)%>%\n  inner_join(oisplace, by= c(\"placefips\"=\"PLACE\"))\ncarbonate=data.frame(municipality=\"Carbonate\", year=c(2010:2015), placefips=NA,totalhousingunits=\"0\",\n                     FIPS_CLASS_CODE=NA, PLACECE=NA, LG_ID=66636, DOR_CODE=NA, CREATED_ON=NA,\n                     CREATED_BY=NA, UPDATED_ON=NA, UPDATED_BY=NA, FEATURE_ID=NA)\nhousingunits=bind_rows(housingunits, carbonate)\n\n# DLG.CM_AUDIT\ncm_audit=sqlFetch(dolaprod, \"DLG.CM_AUDIT\")\n\n# DLG.CM_FUND\ncm_fund=sqlFetch(dolaprod, \"DLG.CM_FUND\")\n\n#### S3 Assessed Value / Household ####\n\nav=lgbasic%>%\n  select(-CREATED_BY:-OSA)%>%\n  inner_join(select(lim_levy, -CREATED_BY:-UPDATED_BY), by=\"LG_ID\")%>%\n  filter(SUBDIST_NUM==1 | SUBDIST_NUM==2, LGTYPE_ID%in%c(2,3,4,5, 61, 70), BUDGET_YEAR>=2012 & BUDGET_YEAR<=2016)%>%\n  select(LG_ID, NAME, BUDGET_YEAR, ASSESSED_VALUE)%>%\n  group_by(LG_ID,NAME)%>%\n  summarize(ASSESSED_VALUE=mean(ASSESSED_VALUE))\n\nhu3=housingunits%>%\n  filter(year>2010)%>%\n  select(LG_ID, year, totalhousingunits)%>%\n  group_by(LG_ID)%>%\n  summarize(housingunits=mean(as.numeric(totalhousingunits)))\n\n#Generates Full Dataset\n\ns3_data=inner_join(av, hu3, by=\"LG_ID\")%>%\n  mutate(s3metric=ASSESSED_VALUE/housingunits)\n\n#Generates Benchmark\n\ns3_benchmark=median(s3_data$s3metric)\n\n#### S4 Current and Projected System Debt/Tap/MHV\n## Need to redo this to be run for S+W S and W.\n## Need to sum S and W for those with separate before creating W+s Median\n## Could do this by spreading the values and using LG-ID as the key\n## Separate MEdians for all sets\n\ns4debt_1=lgbasic%>%\n  select(-CREATED_BY:-OSA)%>%\n  inner_join(select(cm_audit, -UPDATED_ON:-UPDATED_BY), by=\"LG_ID\")%>%\n  inner_join(select(cm_fund, -CREATED_ON:-UPDATED_BY), by=\"CM_AUDIT_ID\")%>%\n  filter(CM_FUND_TYPE_ID%in%c(1,2,3), LGTYPE_ID%in%c(2,3,4,5), LG_ID!=16002, LG_ID!=64030, AUDIT_YEAR>=2010, AUDIT_YEAR<=2014)%>%\n  select(LG_ID, NAME, CM_FUND_TYPE_ID, AUDIT_YEAR, GO_DEBT,REVENUE_DEBT,OTHER_DEBT)%>%\n  mutate(debt=GO_DEBT+REVENUE_DEBT+OTHER_DEBT)%>%\n  group_by(LG_ID, NAME, AUDIT_YEAR)%>%\n  summarize(debt=sum(debt))%>%\n  ungroup()%>%\n  group_by(LG_ID, NAME)%>%\n  summarize(debt=mean(debt))\n\ns4debt_2and3=lgbasic%>%\n  select(-CREATED_BY:-OSA)%>%\n  inner_join(select(cm_audit, -UPDATED_ON:-UPDATED_BY), by=\"LG_ID\")%>%\n  inner_join(select(cm_fund, -CREATED_ON:-UPDATED_BY), by=\"CM_AUDIT_ID\")%>%\n  filter(CM_FUND_TYPE_ID%in%c(2,3), LGTYPE_ID%in%c(2,3,4,5), LG_ID!=16002, LG_ID!=64030, AUDIT_YEAR>=2010, AUDIT_YEAR<=2014)%>%\n  select(LG_ID, NAME, CM_FUND_TYPE_ID, AUDIT_YEAR, GO_DEBT,REVENUE_DEBT,OTHER_DEBT)%>%\n  mutate(debt=GO_DEBT+REVENUE_DEBT+OTHER_DEBT)%>%\n  group_by(LG_ID, NAME, CM_FUND_TYPE_ID)%>%\n  summarize(debt=sum(debt))\n  \n  select(LG_ID, NAME, debt)\n## WHY AM I GETTING ONLY 235\n##LIST OF PLACE NOT IN THERE\ny=anti_join(s3_data, s4debt, by=\"LG_ID\")\n\nhu4=housingunits%>%\n  filter(year>=2010, year<=2014)%>%\n  select(LG_ID, year, totalhousingunits)%>%\n  group_by(LG_ID)%>%\n  summarize(housingunits=mean(as.numeric(totalhousingunits)))\n\nmhv4=codemog_api(data=\"b25077\", db=\"acs1115\", sumlev = \"160\", geography = \"sumlev\")%>%\n  mutate(place=as.numeric(place), \n         mhv=as.numeric(b25077001))%>%\n  left_join(oisplace, c(\"place\"= \"PLACE\"))\n\ns4_data=hu4%>%\n  inner_join(mhv4, by=\"LG_ID\")%>%\n  filter(!is.na(LG_ID))%>%\n  inner_join(s4debt, by=\"LG_ID\")%>%\n  mutate(s4metric=debt/housingunits/mhv,\n         s4metric=ifelse(is.na(s4metric), 0,s4metric))\n\ns4_benchmark=median(s4_data$s4metric)\n\n\n#### S5a System Full-Cost/Tap/MHI ####\n\ns5cost=lgbasic%>%\n  select(-CREATED_BY:-OSA)%>%\n  inner_join(select(cm_audit, -UPDATED_ON:-UPDATED_BY), by=\"LG_ID\")%>%\n  inner_join(select(cm_fund, -CREATED_ON:-UPDATED_BY), by=\"CM_AUDIT_ID\")%>%\n  filter(CM_FUND_TYPE_ID%in%c(1,2,3), LGTYPE_ID%in%c(2,3,4,5), LG_ID!=16002, LG_ID!=64030, AUDIT_YEAR>=2010, AUDIT_YEAR<=2014)%>%\n  mutate(cost=EXP_OPERATING+EXP_TRANSFER_OUT+DEPRECIATION)%>%\n  group_by(LG_ID, NAME)%>%\n  summarize(cost=mean(cost))%>%\n  select(LG_ID, NAME, cost)\n## WHY AM I GETTING ONLY 235\n##LIST OF PLACE NOT IN THERE\ny5=anti_join(s3_data, s5debt, by=\"LG_ID\")\n\n\nhu5a=housingunits%>%\n  filter(year>=2010, year<=2014)%>%\n  select(LG_ID, year, totalhousingunits)%>%\n  group_by(LG_ID)%>%\n  summarize(housingunits=mean(as.numeric(totalhousingunits)))\n\n",
    "created" : 1484166969173.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1491277227",
    "id" : "D0E5F8E9",
    "lastKnownWriteTime" : 1484175939,
    "last_content_update" : 1484175939116,
    "path" : "C:/Users/rjame/OneDrive/Documents/Demography Office/SRF-Disadvantaged-Community-Benchmarks/benchmark_script.R",
    "project_path" : "benchmark_script.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}